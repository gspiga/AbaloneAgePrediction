aba <- read.table("abalone.txt", sep = ",")
# Fixing Column names
names(aba) <-
c(
"Sex",
"Length",
"Diameter",
"Height",
"Whole weight",
"Shucked weight",
"Viscera weight",
"Shell weight",
"Rings"
)
head(aba, 15)
# Search for NA values
any(is.na(aba))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
library(ggplot2)
library(GGally)
library(plotly)
aba <- read.table("abalone.txt", sep = ",")
# Fixing Column names
names(aba) <-
c(
"Sex",
"Length",
"Diameter",
"Height",
"Whole weight",
"Shucked weight",
"Viscera weight",
"Shell weight",
"Rings"
)
head(aba, 15)
# Search for NA values
any(is.na(aba))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point())
lm()
lm(Rings ~ ., data = aba)
fullMod <- lm(Rings ~ ., data = aba)
summary(fullMod)
anova(fullMod)
fullMod <- lm(Rings ~ ., data = aba)
summary(fullMod)
anova(fullMod)
{qqplot(fullMod$residuals)
qqline(fullMod$residuals)}
plot(fullMod)
library(MASS)
boxcox(fullMod)
plot(fullMod)
library(MASS)
boxcox(fullMod)
logFullMod <- lm(log(Rings) ~ ., data = aba)
summary(logFullMod)
drop1(logFullMod)
drop1(logFullMod, test = 'Chisq')
plot(logFullMod)
cor(aba)
corMat <- cor(aba)
### Checking Assumptions
plot(fullMod)
aba
# Change Sex into factor
aba$Sex <- as.factor(aba$Sex)
corMat <- cor(aba)
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point())
aba <- read.table("abalone.txt", sep = ",")
# Fixing Column names
names(aba) <-
c(
"Sex",
"Length",
"Diameter",
"Height",
"Whole weight",
"Shucked weight",
"Viscera weight",
"Shell weight",
"Rings"
)
head(aba, 15)
# Change Sex into factor
aba$Sex <- as.factor(aba$Sex)
# Search for NA values
any(is.na(aba))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point())
corMat <- cor(aba)
corMat <- cor(aba[, 2:])
corMat <- cor(aba[, -1])
aba
corMat
corMat <- cor(aba[, -1])
corMat
heatPlot <- plot_ly(z = corMat, type = "heatmap")
heatPlot
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggplot2)
library(GGally)
library(plotly)
library(ggcorrplot)
ggcorrplot(corMat)
heatPlot
ggcorrplot(corMat)
corMat
corMat
ggcorrplot(corMat)
ggplotly(ggcorrplot(corMat))
# heatPlot <- plot_ly(z = corMat, type = "heatmap")
# heatPlot
ggplotly(ggcorrplot(corMat, type = "lower"))
# heatPlot <- plot_ly(z = corMat, type = "heatmap")
# heatPlot
ggplotly(ggcorrplot(corMat, type = "lower", outline.color = "white"))
# heatPlot <- plot_ly(z = corMat, type = "heatmap")
# heatPlot
ggplotly(ggcorrplot(corMat, type = "lower", outline.col = "white"))
# heatPlot <- plot_ly(z = corMat, type = "heatmap")
# heatPlot
ggcorrplot(corMat, type = "lower", outline.col = "white")
# heatPlot <- plot_ly(z = corMat, type = "heatmap")
# heatPlot
ggcorrplot(corMat, type = "lower", outline.col = "white",lab = TRUE)
# heatPlot <- plot_ly(z = corMat, type = "heatmap")
# heatPlot
ggcorrplot(corMat, type = "lower", outline.col = "white",lab = TRUE, color = c("#9fe2bf", "#2887c8", "#f8674f"))
# heatPlot <- plot_ly(z = corMat, type = "heatmap")
# heatPlot
ggcorrplot(corMat, type = "lower", outline.col = "white",lab = TRUE, color = c("#f8674f", "#2887c8", "#9fe2bf"))
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point(color = c("#f8674f", "#2887c8", "#9fe2bf"))
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point(col = c("#f8674f", "#2887c8", "#9fe2bf"))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point(color = c("#f8674f", "#2887c8", "#9fe2bf")))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point(colour = c("#f8674f", "#2887c8", "#9fe2bf")))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point(color = c("#f8674f", "#2887c8", "#9fe2bf")))
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point())
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point(col = c("#f8674f", "#2887c8", "#9fe2bf")))
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, colour = Sex
)) + geom_point(colour = c("#f8674f", "#2887c8", "#9fe2bf")))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point() + scale_fill_manual(values = c("#f8674f", "#2887c8", "#9fe2bf")))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point() + scale_color_manual(values = c("#f8674f", "#2887c8", "#9fe2bf")))
# Initial Model
fullMod <- lm(Rings ~ ., data = aba)
summary(fullMod)
anova(fullMod)
# Remove Shucked weight since full weight would be easier process
lm(log(Rings) ~ .-"Shucked Weight", data = aba)
# Remove Shucked weight since full weight would be easier process
lm(log(Rings) ~ .-'Shucked Weight', data = aba)
# Remove Shucked weight since full weight would be easier process
lm(log(Rings) ~ .-Shucked Weight, data = aba)
# Remove Shucked weight since full weight would be easier process
lm(log(Rings) ~ ., data = aba)
# Remove Shucked weight since full weight would be easier process
lm(log(Rings) ~ .-`Shucked weight`, data = aba)
summary(noShuckMod)
# Remove Shucked weight since full weight would be easier process
noShuckMod <- lm(log(Rings) ~ .-`Shucked weight`, data = aba)
summary(noShuckMod)
# Clean model by removing Length, and Viscera weight
redMod <- lm(log(Rings)~Sex + Diameter + Height + 'Whole weight' + 'Shell weight', data = aba)
summary(noShuckMod)
# Clean model by removing Length, and Viscera weight
redMod <- lm(log(Rings) ~ Sex + Diameter + Height + 'Whole weight' + 'Shell weight', data = aba)
# Clean model by removing Length, and Viscera weight
redMod <- lm(log(Rings) ~ Sex + Diameter + Height, data = aba)
# Clean model by removing Length, and Viscera weight
redMod <- lm(log(Rings) ~ Sex + Diameter + Height+ Whole weight + Shell weight, data = aba)
# Clean model by removing Length, and Viscera weight
redMod <- lm(log(Rings) ~ Sex + Diameter + Height+ 'Whole weight' + 'Shell weight', data = aba)
make.names(aba)
names(aba)
make.names(names(aba))
names(aba) <- make.names(names(aba))
aba
aba <- read.table("abalone.txt", sep = ",")
# Fixing Column names
names(aba) <-
c(
"Sex",
"Length",
"Diameter",
"Height",
"Whole.weight",
"Shucked.weight",
"Viscera.weight",
"Shell.weight",
"Rings"
)
head(aba, 15)
# Change Sex into factor
aba$Sex <- as.factor(aba$Sex)
# Search for NA values
any(is.na(aba))
# Clean model by removing Length, and Viscera weight
redMod <- lm(log(Rings) ~ Sex + Diameter + Height+ Whole.weight + Shell.weight, data = aba)
summary(redMod)
# Male sex is becoming obviously insignifcant, so lets make new column where abalone is infant or not
aba$Infant <- ifelse(aba$Sex == 'I', 1, 0)
# Male sex is becoming obviously insignifcant, so lets make new column where abalone is infant or not
aba$Infant <- ifelse(aba$Sex == 'I', 1, 0)
aba$Infant
data.frame(aba$Sex, aba$Infant)
# Male sex is becoming obviously insignifcant, so lets make new column where abalone is infant or not
aba$Infant <- as.factor(ifelse(aba$Sex == 'I', 'Y','N'))
aba$Infant
data.frame(aba$Sex, aba$Infant)
# Clean model by removing Length, and Viscera weight
redMod <- lm(log(Rings) ~ Infant + Diameter + Height+ Whole.weight, data = aba)
summary(redMod)
summary(noShuckMod)
summary(redMod)
anova(fullMod, redMod)
anova(logFullMod, redMod)
stepAIC(logFullMod, scope = list("lower" = redMod, "upper" = logFullMod), direction = "forward")
library(ggplot2)
library(GGally)
library(plotly)
library(ggcorrplot)
aba <- read.table("abalone.txt", sep = ",")
# Fixing Column names
names(aba) <-
c(
"Sex",
"Length",
"Diameter",
"Height",
"Whole.weight",
"Shucked.weight",
"Viscera.weight",
"Shell.weight",
"Rings"
)
head(aba, 15)
# Change Sex into factor
aba$Sex <- as.factor(aba$Sex)
# Search for NA values
any(is.na(aba))
#hist(aba$Length)
# Histrogram of Length
ggplot(data = aba, aes(x = Length)) + geom_histogram(bins = 20, fill = "dodgerblue")
# Scatterplot of Diameter and Height
ggplot(data = aba, aes(x = Diameter, y = Height)) + geom_point()
# Scatter plot of Diameter, Rings, and Sex with plotly
ggplotly(ggplot(data = aba, aes(
x = Diameter, y = Rings, color = Sex
)) + geom_point() + scale_color_manual(values = c("#f8674f", "#2887c8", "#9fe2bf")))
corMat <- cor(aba[, -1])
corMat
# heatPlot <- plot_ly(z = corMat, type = "heatmap")
# heatPlot
ggcorrplot(
corMat,
type = "lower",
outline.col = "white",
lab = TRUE,
color = c("#f8674f", "#2887c8", "#9fe2bf")
)
# Lots of high multicollinearity!!
# Initial Model
fullMod <- lm(Rings ~ ., data = aba)
summary(fullMod)
anova(fullMod)
### Checking Assumptions
plot(fullMod)
# Check for transformation
library(MASS)
boxcox(fullMod)
# Now we use full log model
logFullMod <- lm(log(Rings) ~ ., data = aba)
summary(logFullMod)
plot(logFullMod)
# Remove Shucked weight since full weight would be easier process
noShuckMod <- lm(log(Rings) ~ .-`Shucked weight`, data = aba)
# Remove Shucked weight since full weight would be easier process
noShuckMod <- lm(log(Rings) ~ .-Shucked.weight, data = aba)
summary(noShuckMod)
# Male sex is becoming obviously insignifcant, so lets make new column where abalone is infant or not
aba$Infant <- as.factor(ifelse(aba$Sex == 'I', 'Y','N'))
aba$Infant
# Clean model by removing Length, and Viscera weight
redMod <- lm(log(Rings) ~ Infant + Diameter + Height+ Whole.weight, data = aba)
summary(redMod)
anova(logFullMod, redMod)
stepAIC(logFullMod, scope = list("lower" = redMod, "upper" = logFullMod), direction = "forward")
